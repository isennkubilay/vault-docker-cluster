events { 
  worker_connections 1024; 
}

http {
  # Hide nginx version
  server_tokens off;
  
  # Disable gzip to prevent potential security issues with Vault
  gzip off;

  # Upstream configuration for Vault servers
  upstream vault_servers {
    # Use IP hash to maintain session affinity
    ip_hash;
    
    # Vault server instances
    server vault-1:8200 max_fails=3 fail_timeout=30s;
    server vault-2:8200 max_fails=3 fail_timeout=30s;
    server vault-3:8200 max_fails=3 fail_timeout=30s;
    
    # Enable keepalive connections to backends
    keepalive 32;
  }

  server {
    listen 8200;
    server_name _;

    # Server info settings
    server_tokens off;
    
    # Timeouts for Vault
    proxy_read_timeout 90s;
    proxy_connect_timeout 90s;
    proxy_send_timeout 90s;
    proxy_buffering off;
    
    # Buffer sizes for large requests/responses
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Health check endpoint
    location /health {
      proxy_pass http://vault_servers/v1/sys/health;
      proxy_set_header Host $host;
      access_log off;
    }

    # Main Vault API endpoint
    location / {
      proxy_pass http://vault_servers;
      
      # Proxy headers - critical for Vault
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Port $server_port;
      
      # Vault-specific headers
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      
      # Session handling - important for UI
      proxy_cookie_path / /;
      proxy_cookie_flags ~ secure httponly;
      
      # Handle websockets if needed
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      
      # Cache control - prevent caching of auth state
      proxy_no_cache $http_pragma $http_authorization;
      proxy_cache_bypass $http_pragma $http_authorization;
      
      # Error handling
      error_page 502 503 504 /error.html;
    }

    # Error page
    location = /error.html {
      internal;
      default_type text/html;
      return 503 "Service temporarily unavailable";
    }
  }
}